global_plugin /usr/lib/cedalo_mosquitto_ha.so

# Disable unauthenticated access. Authentication and access control is
# encorporated into the HA plugin with the same functionality as the Dynamic
# Security plugin, which can be controlled by the Management Center for Mosquitto
allow_anonymous false

## Listener

# The listener for receiving incoming MQTT connections from the load balancer.
# This listener will be automatically closed when this node is not the cluster
# leader.
listener 1888

# Optional websockets listener, if used this must be exposed in the
# docker-compose configuration
#listener 8080
#protocol websockets

# The listener for receiving the MMC connection / API control of a follower node.
# This listener will remain open regardless of the role of the node in the
# cluster. It should not be used by general purpose MQTT clients and is not
# HA supported.
listener 1885
admin_listener true

## Some sensible options - tweak as per your requirements

# Set max_keepalive to be reasonably higher than your max value
max_keepalive 1800

# max_packet_size can protect devices against unreasonably large payloads
max_packet_size 100000000

# Reduce network latency
set_tcp_nodelay true

# Queueing limits for clients - if these limits are exceeded, clients will lose
# messages. This mostly affects persistent clients that are disconnected and
# hence having messages queued for them, but slow clients and/or fast message
# rates may require this to be increased.
max_inflight_messages 100
max_queued_messages 1000

# Location for all plugins to store their data
persistence_location /mosquitto/data

# Queue and persistent queue settings
#
# The maximum number of QoS 1 and 2 messages to hold in a queue per client
# above those that are currently in-flight.  Defaults to 1000. Set
# to 0 for no maximum (not recommended).
#max_queued_messages 1000
#
# The maximum number of QoS 1 and 2 messages to hold in a queue per client
# in the persistent on-disk store. Defaults to value of max_queued_messages option.
# Has to be configured equal to or greater than max_queued_messages option.
#max_persist_queued_messages 1000000

# Broker CONTROL API
enable_control_api true

# Enable debug logging
# log_type all

## Plugins

# Client Inspection Plugin providing metrics about connected/disconnected clients.
plugin /usr/lib/cedalo_inspect.so
# Duration in seconds how long the metric data of disconnected client will be
# kept in the plugins internal data structures.
# plugin_opt_disconnected_clients_ttl 120

# Client Control Plugin providing actions to disconnect, subscribe and
# unsubscribe clients.
plugin /usr/lib/cedalo_client_control.so

# Certificate Management Plugin
plugin /usr/lib/cedalo_certificate_management.so

# Use SQLite as persistent store
# plugin /usr/lib/mosquitto_persist_sqlite.so

# Use LMDB as persistent store
# /usr/lib/cedalo_persist_lmdb.so

# LDAB based authentication
# /usr/lib/cedalo_ldap_auth.so

# JWT based authentication
# /usr/lib/cedalo_jwt_auth.so

# Audit Trail plugin
# plugin /usr/lib/cedalo_audit_plugin.so

# Audit Trail Syslog plugin
# /usr/lib/cedalo_audit_trail_syslog.so

# Force username to be set to clientid
# /usr/lib/cedalo_force_username.so

# HTTP Bridge
# plugin /usr/lib/cedalo_http_bridge.so
# plugin_opt_config_file http-bridge.json

# MongoDB Bridge plugin
# plugin /usr/lib/cedalo_mongodb_bridge.so

# Kafka Bridge plugin
# plugin /usr/lib/cedalo_kafka_bridge.so

# SQL bridge plugin
# plugin /usr/lib/cedalo_sql_bridge.so
# plugin_opt_config_file sql-bridge.json

# Google Pub-Sub plugin
# plugin /usr/lib/cedalo_google_pubsub.so
# plugin_opt_key_file pubsub-key.json
# plugin_opt_config_file pubsub-config.json

# Snowflake DB Bridge plugin
# /usr/lib/cedalo_snowflake_bridge.so

# InfluxDB Metrics plugin
# /usr/lib/cedalo_metrics_influxdb.so
# plugin_opt_bind_address 127.0.0.1
# plugin_opt_port <http-port>
# plugin_opt_update_interval 60

# Prometheus Metrics plugin
# /usr/lib/cedalo_metrics_prometheus.so
# plugin_opt_bind_address 127.0.0.1
# plugin_opt_port <http-port>
# plugin_opt_update_interval 60

# Topic Tree plugin
plugin /usr/lib/cedalo_topic_tree.so
